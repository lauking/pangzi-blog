<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[胖浩网]]></title>
  
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.haozi520.com/"/>
  <updated>2014-05-29T01:53:18.165Z</updated>
  <id>http://www.haozi520.com/</id>
  
  <author>
    <name><![CDATA[lauking]]></name>
    <email><![CDATA[lauking1001@163.com]]></email>
  </author>
  
  <generator uri="http://zespia.tw/hexo/">Hexo</generator>
  
  <entry>
    <title><![CDATA[老板的眼泪，你懂吗？]]></title>
    <link href="http://www.haozi520.com/2014/05/29/%E8%80%81%E6%9D%BF%E7%9A%84%E7%9C%BC%E6%B3%AA/"/>
    <id>http://www.haozi520.com/2014/05/29/老板的眼泪/</id>
    <published>2014-05-29T01:40:12.000Z</published>
    <updated>2014-05-29T01:53:05.000Z</updated>
    <content type="html"><![CDATA[<h4 id="老板的眼泪，你懂吗？献给伟大的老板和正在抱怨的员工？">老板的眼泪，你懂吗？献给伟大的老板和正在抱怨的员工？</h4>
<p>  选择做老板，就是选择了风险，选择了责任和压力，选择了含辛茹苦的劳累，选择了被别人的不理解，但是，您依旧无怨无悔。<br>  有多少个夜晚，所有的员工都进入了梦乡，而你办公室里的灯依然亮着；<br>  有多少个节假日，别人都在休闲，而你，却在跑客户、市场或是各种培训课程的会场上<br>  就算是一年一度的春节，你还要挨家挨户的给领导给关系户拜年；<br>  有多少次，员工犯了错，你除了自己承担责任，还要反过来去安慰犯错的人；<br>  有多少次，因为服务出了问题，客户怨你骂你，冷眼待你，而你只能陪着笑脸；<br>  有多少次，企业周转资金遇到困难时，为了让员工准时拿到工资，你放下自己的自尊，到处求人，彻夜难眠；<br>  有多少次，为了应酬，你硬着头皮一杯接一杯的喝，甚至喝到洗手间里吐出来，还要继续再喝；<br>  有多少次，你答应了陪伴家人，却一次次的失信；父母亲年纪大了，需要你去尽孝心；孩子正在成长阶段，需要你去辅导；<br>  爱人的生日、结婚纪念日，需要你陪她逛街买礼物；<br>  自己身体不舒服了，需要去医院治疗；<br>  这些常人都很容易做到的，对你来讲，却总是那么的难，那么的难；<br>  可是，即使这样，又有多少人能够理解您？员工认为你自私，朋友觉得你无情，家人抱怨你冷漠，孩子感觉你不关心他，没有人明白你内心的无奈，没有人体会你心灵的孤独，没有人理解你心里的委屈和心酸，你甚至连一个可以倾诉的人都没有，你甚至连眼泪都只能悄悄地流。<br>  是的，很多人认为你经营企业只是为了赚钱，你就算是累死也是天经地义的；<br>  有多少人知道，如果只是为了赚钱，有多少已经完成原始资本积累的老板，完全可以选择把企业卖掉，因为赚的钱一辈子都花不完；<br>  只有你自己了解，心中的追求，只有你自己明白，作为船长的责任；<br>  只有你自己知道，这，就是上天赋予你的使命!你告诉自己：<br>  既然选择了做船长，就要为船上所有的人负责！<br>  虽然，偶尔你也会有心灰意冷的时候，也会有想要放弃的念头，但是，每一次上下班的时间，当你从办公室的窗口看着几百员工像潮水一样进出企业的时候；你很快就打消了念头，很快就振作起来；你告诉自己：为了让更多的人有一份稳定的工作，为了让更多的家庭生活得幸福，为了让更多的人拥有一个实现梦想的舞台，你愿意用自己的生命作为赌注；用身体作为代价；用孤独作为交换；生命不息，战斗到底！做老板不易，多理解您的老板！现在理解老板，未来别人理解你！老板的伟大是用血泪煎熬出来的！你懂吗？</p>
]]></content>
    
    
      <category term="创业" scheme="http://www.haozi520.com/tags/%E5%88%9B%E4%B8%9A/"/>
    
      <category term="工作" scheme="http://www.haozi520.com/tags/%E5%B7%A5%E4%BD%9C/"/>
    
      <category term="创业" scheme="http://www.haozi520.com/categories/%E5%88%9B%E4%B8%9A/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[用nodejs对数据进行加密]]></title>
    <link href="http://www.haozi520.com/2014/05/27/nodejs-Crypto-for-DES-MD5/"/>
    <id>http://www.haozi520.com/2014/05/27/nodejs-Crypto-for-DES-MD5/</id>
    <published>2014-05-27T10:18:12.000Z</published>
    <updated>2014-05-27T10:20:19.000Z</updated>
    <content type="html"><![CDATA[<p>在使用nodejs加解密的时候 有时候不知道有没有自己要用的加密方式<br>使用如下代码<br>require(‘crypto’).getHashes()<br>可以知道支持的那些哈希算法<br>或者<br> require(‘crypto’).getCiphers()<br>可以知道支持的那些非哈希算法</p>
<h3 id="MD5加密算法使用">MD5加密算法使用</h3>
<p>代码如下</p>
<p><pre><br>var  MD5=function (data) {<br>   var _encrymd5 = require(‘crypto’).createHash(‘md5’);<br>   _encrymd5.update(data);<br>   return _encrymd5.digest(‘hex’);<br>}<br></pre><br>因为md5是哈希算法 ,一般哈希算法都是不可逆的吧<br>-用CreateHash创建一个对象<br>-用update来加密<br>-用digest来输出结果<br>-参数是输出的编码格式</p>
<h3 id="DES加解密算法使用">DES加解密算法使用</h3>
<p>因为DES不是哈希所以加密用createCipheriv解密用createDecipheriv的方法<br>代码如下：</p>
<p><pre><br> var cipheriv = function (en, code, data) {<br>      var buf1 = en.update(data, code), buf2 = en.final();<br>      var r = new Buffer(buf1.length + buf2.length);<br>      buf1.copy(r); buf2.copy(r, buf1.length);<br>      return r;<br>};<br>var  EncryptDES=function (data, key, vi) {<br>      return data = cipheriv(_crypto.createCipheriv(‘des’, key, vi), ‘utf8’, data).toString(‘base64’);<br>};<br>var DecryptDES: function (data, key, vi) {<br>     return cipheriv(_crypto.createDecipheriv(‘des’, key, vi), ‘base64’, data) .toString(‘utf8’);<br>};<br></pre><br>因为都有加解密来填充和输出串,所以写一个公共的方法<br>-data是加解密的数据<br>-key是密钥<br>-vi是密钥向量<br>-EncryptDES是加密<br>-DecryptDES是解密</p>
]]></content>
    
    
      <category term="nodejs" scheme="http://www.haozi520.com/tags/nodejs/"/>
    
      <category term="md5" scheme="http://www.haozi520.com/tags/md5/"/>
    
      <category term="des" scheme="http://www.haozi520.com/tags/des/"/>
    
      <category term="加密" scheme="http://www.haozi520.com/tags/%E5%8A%A0%E5%AF%86/"/>
    
      <category term="解密" scheme="http://www.haozi520.com/tags/%E8%A7%A3%E5%AF%86/"/>
    
      <category term="nodejs" scheme="http://www.haozi520.com/categories/nodejs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[php在linux中利用exec执行shell脚本]]></title>
    <link href="http://www.haozi520.com/2014/05/26/php-exec-linux-shell/"/>
    <id>http://www.haozi520.com/2014/05/26/php-exec-linux-shell/</id>
    <published>2014-05-26T07:42:12.000Z</published>
    <updated>2014-05-27T10:21:03.000Z</updated>
    <content type="html"><![CDATA[<p>今天刚好看到php在linux中利用exec方法执行shell脚本的blog，觉得很有意思，就想能不能写一个程序定时去检测某个服务是否还在跑，如果服务已挂则执行重启脚本。</p>
<p>现在使用jetty容器来模拟。</p>
<h3 id="编写重启已挂服务的shell脚本">编写重启已挂服务的shell脚本</h3>
<pre>
cd $1 //执行程序的目录
ps -ef |grep start.jar |grep -v grep |cut -c 9-15 |xargs kill -s 9
java -jar -Xmx768m -Xms512m $1/start.jar >/dev/null 2>&1 &
</pre>
脚本编写后放在jetty的根目录下,保存文件名为runjetty.sh,并执行以下命令使其成为可执行文件
<pre>
chmod 775 runjetty.sh
</pre>

<h3 id="编写php脚本">编写php脚本</h3>
<p>新建TestServer.php文件，在&lt;?php和?&gt;中加入以下代码：</p>
<p><pre><br>$flag=0;<br>try{<br>    $ch = curl_init();<br>    $url=”<a href="http://xxxx:port/pay/GetIpLocal.php?ip=117.135.139.162" target="_blank">http://xxxx:port/pay/GetIpLocal.php?ip=117.135.139.162</a>“;<br>    curl_setopt($ch, CURLOPT_URL, $url);<br>    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);<br>    curl_setopt($ch, CURLOPT_HEADER, 0);<br>    $output = curl_exec($ch);<br>    curl_close($ch);<br>    if(empty($output)){<br>        $flag=1;<br>    }else{<br>        echo $output;<br>        if(strpos($output,”ip=117.135.139.162”)&gt;0){<br>            $flag=0;<br>        }else{<br>            $flag=1;<br>        }<br>    }<br>}catch(Exception $e){<br>    $flag=1;<br>    echo $e;<br>}<br>if($flag){<br>   $ecommand=”/data/soft/jetty/runjetty.sh /data/soft/jetty”;<br>   exec($ecommand,$output,$result);<br>   if($result!=0){<br>    exec($ecommand,$output,$result);<br>   }<br>}<br></pre></p>
<h3 id="运行php脚本">运行php脚本</h3>
<p>首先我们确认jetty服务是否启动<br>在console上运行</p>
<p><pre><br>ps -ef | grep start.jar<br></pre><br>输出如下结果则说明服务是启动：<br><img src="http://haozi520.u.qiniudn.com/20140526162811.png" alt="已启动jetty服务"><br>我们修改TestServer.php文件中的url请求地址，修改成服务中没有的接口。例如<br>$url=”<a href="http://xxxx:port/pay/GetIpLocal2.php?ip=117.135.139.162&quot;，我们在console中继续执行：" target="_blank">http://xxxx:port/pay/GetIpLocal2.php?ip=117.135.139.162&quot;，我们在console中继续执行：</a></p>
<p><pre><br>php TestServer.php<br></pre><br>执行结束后，查看jetty进程号是否改变<br><img src="http://haozi520.u.qiniudn.com/20140526163403.png" alt="查看进程是否改变"><br>我们发现进程号发生了变化，说明我们的php脚本执行shell是成功的。</p>
]]></content>
    
    
      <category term="php" scheme="http://www.haozi520.com/tags/php/"/>
    
      <category term="shell" scheme="http://www.haozi520.com/tags/shell/"/>
    
      <category term="linux" scheme="http://www.haozi520.com/tags/linux/"/>
    
      <category term="php" scheme="http://www.haozi520.com/categories/php/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[nodejs for windows 环境搭建]]></title>
    <link href="http://www.haozi520.com/2014/05/23/nodejs-for-windows-bulding/"/>
    <id>http://www.haozi520.com/2014/05/23/nodejs-for-windows-bulding/</id>
    <published>2014-05-23T10:06:12.000Z</published>
    <updated>2014-05-27T10:10:02.000Z</updated>
    <content type="html"><![CDATA[<h3 id="下载">下载</h3>
<p>登录nodejs.org的<a href="http://nodejs.org/" target="_blank">官网</a>可以下载到最新版本的安装包<br><img src="http://haozi520.u.qiniudn.com/20140526132719.png" alt="1.下载nodejs安装包"></p>
<h3 id="安装并设置环境变量">安装并设置环境变量</h3>
<p>我的电脑是32位的所以下载到的安装包是<em>node-v0.10.28-x86.msi</em>，双击<br>这个msi文件，会自动运行安装，在选在安装目录时选择自己需要的目录安装，默认安装在C:\Program Files\nodejs下面,程序安装结束后会自动设定系统环境变量PATH<br><img src="http://haozi520.u.qiniudn.com/20140526135740.png" alt="2.自动设置环境变量"></p>
<h3 id="检查安装是否成功">检查安装是否成功</h3>
<p>进入CDM窗口，输入node -v：</p>
<pre>node -v</pre>

<p>输出：v0.10.28,说明nodejs安装成功<br>输入npm -v，检查npm是否安装，一般都是被一起安装到nodejs目录下</p>
<pre>npm -v</pre>
输出：1.4.9，说明npm安装成功

### 测试
随便一个目录创建一个js文件，例如hello.js,编写如下代码
<pre>console.log("hello,world!");</pre>
在CMD窗口中进入hello.js文件目录，运行node hello.js
<pre>
>node hello.js
 hello,world!
 </pre>

<h3 id="附带整理">附带整理</h3>
<p>如果要安装别的模块可以在工程目录下运行：</p>
<pre> 
 npm install express //安装在当前目录
 npm install express -g //安装在系统下
</pre>


]]></content>
    
    
      <category term="nodejs" scheme="http://www.haozi520.com/tags/nodejs/"/>
    
      <category term="window" scheme="http://www.haozi520.com/tags/window/"/>
    
      <category term="node环境" scheme="http://www.haozi520.com/tags/node%E7%8E%AF%E5%A2%83/"/>
    
      <category term="nodejs" scheme="http://www.haozi520.com/categories/nodejs/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MySQL复制表结构及数据SQL语句]]></title>
    <link href="http://www.haozi520.com/2014/05/08/mysql-copy-struct-data-sql/"/>
    <id>http://www.haozi520.com/2014/05/08/mysql-copy-struct-data-sql/</id>
    <published>2014-05-08T02:23:12.000Z</published>
    <updated>2014-05-28T08:57:15.000Z</updated>
    <content type="html"><![CDATA[<p>对大数据取样操作时避免不了对一张大表数据取出一小部分数据进行分析，这样操作不但能节省时间而且能快速查询获取结果。  复制表结构和符合条件的数据到临时表就是很好的方案，下面介绍MySQL复制表结构及数据SQL语句</p>
<h3 id="复制表结构及数据到新表">复制表结构及数据到新表</h3>
<p>CREATE TABLE 新表SELECT * FROM 旧表<br>这种方法会将oldtable中所有的内容都拷贝过来，当然我们可以用delete from newtable;来删除。<br>不过这种方法的一个最不好的地方就是新表中没有了旧表的primary key、Extra（auto_increment）等属性。需要自己用&quot;alter&quot;添加，而且容易搞错。</p>
<h3 id="只复制表结构到新表">只复制表结构到新表</h3>
<p>CREATE TABLE 新表SELECT * FROM 旧表WHERE 1=2<br>或CREATE TABLE 新表LIKE 旧表</p>
<h3 id="复制旧表的数据到新表(假设两个表结构一样)">复制旧表的数据到新表(假设两个表结构一样)</h3>
<p>INSERT INTO 新表SELECT * FROM 旧表</p>
<h3 id="复制旧表的数据到新表(假设两个表结构不一样)">复制旧表的数据到新表(假设两个表结构不一样)</h3>
<p>INSERT INTO 新表(字段1,字段2,…….) SELECT 字段1,字段2,…… FROM 旧表</p>
<h3 id="可以将表1结构复制到表2">可以将表1结构复制到表2</h3>
<p>SELECT * INTO 表2 FROM 表1 WHERE 1=2</p>
<h3 id="可以将表1内容全部复制到表2">可以将表1内容全部复制到表2</h3>
<p>SELECT * INTO 表2 FROM 表1</p>
<h3 id="show_create_table_旧表">show create table 旧表</h3>
<p>这样会将旧表的创建命令列出。我们只需要将该命令拷贝出来，更改table的名字，就可以建立一个完全一样的表</p>
<h3 id="mysqldump">mysqldump</h3>
<p>用mysqldump将表dump出来，改名字后再导回去或者直接在命令行中运行</p>
]]></content>
    
    
      <category term="mysql" scheme="http://www.haozi520.com/tags/mysql/"/>
    
      <category term="表数据" scheme="http://www.haozi520.com/tags/%E8%A1%A8%E6%95%B0%E6%8D%AE/"/>
    
      <category term="表结构" scheme="http://www.haozi520.com/tags/%E8%A1%A8%E7%BB%93%E6%9E%84/"/>
    
      <category term="mysql" scheme="http://www.haozi520.com/categories/mysql/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[sql中使用replace函数用于update语句]]></title>
    <link href="http://www.haozi520.com/2014/05/05/sql-replace-update/"/>
    <id>http://www.haozi520.com/2014/05/05/sql-replace-update/</id>
    <published>2014-05-05T03:44:12.000Z</published>
    <updated>2014-05-28T09:06:44.000Z</updated>
    <content type="html"><![CDATA[<p>这两天在给一款游戏产品生成模拟玩家排行榜数据，主要生成玩家名字，玩家的积分，使用的道具。为了偷懒，直接从另一款产品中导过一批玩家名字，可是发现有些敏感字符、一些名字还很别扭，很玩家名字中间好几个空格或者名字前面好几个空格。这样在看到排行时就跟别扭了，产品一看就没有档次。<br><img src="http://haozi520.u.qiniudn.com/20140505113935.png" alt="sql中使用replace函数用于update语句"><br>想在数据库中把空格替换掉，看看SQl中replace函数在update中怎么使用。</p>
<h3 id="REPLACE">REPLACE</h3>
<p>   用第三个表达式替换第一个字符串表达式中出现的所有第二个给定字符串表达式。</p>
<h4 id="语法">语法</h4>
<pre><code><span class="operator"><span class="keyword">REPLACE</span> ( <span class="string">''</span>string_expression1<span class="string">''</span> , <span class="string">''</span>string_expression2<span class="string">''</span> , <span class="string">''</span>string_expression3<span class="string">''</span> )</span>
</code></pre><h4 id="参数">参数</h4>
<pre><code><span class="string">''</span>string_expression1<span class="string">''</span> <span class="comment">//待搜索的字符串表达式。string_expression1 可以是字符数据或二进制数据。</span>
<span class="string">''</span>string_expression2<span class="string">''</span> <span class="comment">//待查找的字符串表达式。string_expression2 可以是字符数据或二进制数据。</span>
<span class="string">''</span>string_expression3<span class="string">''</span><span class="comment">//替换用的字符串表达式。string_expression3 可以是字符数据或二进制数据。</span>
</code></pre><h4 id="返回类型">返回类型</h4>
<pre><code>如果string_expression（<span class="number">1</span>、<span class="number">2</span> 或 <span class="number">3</span>）是支持的字符数据类型之一，则返回字符数据。
如果string_expression（<span class="number">1</span>、<span class="number">2</span> 或 <span class="number">3</span>）是支持的 <span class="keyword">binary</span> 数据类型之一，则返回二进制数据。
</code></pre><h3 id="示例">示例</h3>
<p>   下例用 xxx 替换 abcdefghi 中的字符串 cde。<br>    SELECT REPLACE(‘’abcdefghicde’’,’’cde’’,’’xxx’’)<br>   下面是结果集：<br>     abxxxfghixxx<br>     (1 row(s) affected)</p>
]]></content>
    
    
      <category term="mysql" scheme="http://www.haozi520.com/tags/mysql/"/>
    
      <category term="replace函数" scheme="http://www.haozi520.com/tags/replace%E5%87%BD%E6%95%B0/"/>
    
      <category term="mysql" scheme="http://www.haozi520.com/categories/mysql/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[只源于：爱]]></title>
    <link href="http://www.haozi520.com/2014/02/26/only-come-from-love/"/>
    <id>http://www.haozi520.com/2014/02/26/only-come-from-love/</id>
    <published>2014-02-26T11:51:12.000Z</published>
    <updated>2014-05-28T09:12:36.000Z</updated>
    <content type="html"><![CDATA[<p>一个男人，最大的骄傲，是有一个女人在深夜里，无论多晚都会等候你、牵挂你。<br>    一个女人，最大的骄傲，是有一个男人在忙碌完，无论多晚多累都会想着回家，因为他知道，有个傻丫头在牵挂着、等着他。 一个家，两个人，需要的是包容、理解、鼓励、珍惜。<br>    这一切的一切，只源于：爱。<br>    所以，男人怕老婆的家庭都很容易富裕。<br>    所谓＂怕＂不是畏惧，是珍惜、疼爱、尊重和舍不得她受委屈。<br>这里奉上大爱图<br><img src="http://haozi520.u.qiniudn.com/20140226194703.jpg" alt="只源于爱"></p>
]]></content>
    
    
      <category term="生活" scheme="http://www.haozi520.com/tags/%E7%94%9F%E6%B4%BB/"/>
    
      <category term="体悟生活" scheme="http://www.haozi520.com/categories/%E4%BD%93%E6%82%9F%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
</feed>
